---- Base app schema

-- Authors
CREATE TABLE "authors" (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
	name varchar(128) NOT NULL,
	email varchar(128) NOT NULL UNIQUE,
	created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

	-- Auth
	password varchar(256) NOT NULL,
	password_salt uuid NOT NULL DEFAULT gen_random_uuid(),
	token_salt uuid NOT NULL DEFAULT gen_random_uuid()
);--#

-- Posts
CREATE TABLE "posts" (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
	title varchar(256) NOT NULL,
	content varchar(512) NOT NULL,
	author_id BIGINT,
	created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
	updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
	FOREIGN KEY (author_id) REFERENCES authors(id) ON DELETE SET NULL
);--#

-- Edit Status
CREATE TYPE EDIT_STATUS AS ENUM ('PENDING', 'ACCEPTED', 'REJECTED');--#

-- Edits
CREATE TABLE "edits" (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000),
	post_id BIGINT,
	editor_id BIGINT,
	status EDIT_STATUS NOT NULL DEFAULT 'PENDING'::EDIT_STATUS,
	new_content text NOT NULL,
	created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
	updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
	FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
	FOREIGN KEY (editor_id) REFERENCES authors(id) ON DELETE CASCADE,
	PRIMARY KEY (editor_id, post_id)
);--#

CREATE OR REPLACE FUNCTION trigger_set_timestamp()
RETURNS TRIGGER
LANGUAGE plpgsql AS
$$
BEGIN
    NEW.updated_at = now();
    RETURN NEW;
END;
$$;--#

CREATE TRIGGER set_timestamp_edits
BEFORE UPDATE ON edits
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();--#

CREATE TRIGGER set_timestamp_posts
BEFORE UPDATE ON posts
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();--#